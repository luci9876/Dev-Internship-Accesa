// <auto-generated />
using System;
using Accesa.SportsBuddy.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Accesa.SportsBuddy.Migrations
{
    [DbContext(typeof(SportsBuddyDBContext))]
    [Migration("20210902085514_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("decimal(8,6)");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("decimal(9,6)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.AdministratedSportCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SportCenterAdminId")
                        .HasColumnType("int");

                    b.Property<int>("SportCenterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SportCenterAdminId");

                    b.HasIndex("SportCenterId");

                    b.ToTable("AdministratedSportCenter");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.Challenge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int")
                        .HasColumnName("AuthorID");

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TrackedOutcome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Challenge");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId")
                        .HasColumnType("int")
                        .HasColumnName("AddressID");

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Duration")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Goal")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("AuthorId");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.EventCreatedBySportCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId")
                        .HasColumnType("int")
                        .HasColumnName("AddressID");

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Duration")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Goal")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("AuthorId");

                    b.ToTable("EventCreatedBySportCenter");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.Favorite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TraineeId")
                        .HasColumnType("int");

                    b.Property<int>("TrainingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TraineeId");

                    b.HasIndex("TrainingId");

                    b.ToTable("Favorite");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("date");

                    b.Property<decimal?>("Rating")
                        .HasColumnType("decimal(4,2)");

                    b.Property<int>("TraineeId")
                        .HasColumnType("int");

                    b.Property<int>("TrainingId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TraineeId");

                    b.HasIndex("TrainingId");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.SportCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Address")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Address");

                    b.ToTable("SportCenter");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.SportCenterAdmin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("SportCenterAdmin");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.TraineeChallenge", b =>
                {
                    b.Property<int>("ChallengeId")
                        .HasColumnType("int")
                        .HasColumnName("ChallengeID");

                    b.Property<int>("TraineeId")
                        .HasColumnType("int")
                        .HasColumnName("TraineeID");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("bit");

                    b.Property<string>("Proof")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ChallengeId", "TraineeId")
                        .HasName("PK__TraineeC__74161032123B8A4C");

                    b.HasIndex("TraineeId");

                    b.ToTable("TraineeChallenge");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.TraineeTrainingProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("TraineeId")
                        .HasColumnType("int");

                    b.Property<int>("TrainingProgramId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TraineeId");

                    b.HasIndex("TrainingProgramId");

                    b.ToTable("TraineeTrainingProgram");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.Trainer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Rating")
                        .HasColumnType("decimal(4,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Trainers");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.TrainerSportCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SportCenterId")
                        .HasColumnType("int");

                    b.Property<int>("TrainerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SportCenterId");

                    b.HasIndex("TrainerId");

                    b.ToTable("TrainerSportCenter");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.TrainerTrainingProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TrainerId")
                        .HasColumnType("int");

                    b.Property<int>("TrainingProgramId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TrainerId");

                    b.HasIndex("TrainingProgramId");

                    b.ToTable("TrainerTrainingProgram");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.TrainingProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Difficulty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(4,2)");

                    b.Property<string>("RecommendedSteps")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SportCenterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SportCenterId");

                    b.ToTable("TrainingProgram");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Address")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Address");

                    b.HasIndex("RoleId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.AdministratedSportCenter", b =>
                {
                    b.HasOne("Accesa.SportsBuddy.Database.Models.SportCenterAdmin", "SportCenterAdmin")
                        .WithMany("AdministratedSportCenters")
                        .HasForeignKey("SportCenterAdminId")
                        .HasConstraintName("FK_AdministratedSportCenter_SportCenterAdmin")
                        .IsRequired();

                    b.HasOne("Accesa.SportsBuddy.Database.Models.SportCenter", "SportCenter")
                        .WithMany("AdministratedSportCenters")
                        .HasForeignKey("SportCenterId")
                        .HasConstraintName("FK_AdministratedSportCenter_SportCenter")
                        .IsRequired();

                    b.Navigation("SportCenter");

                    b.Navigation("SportCenterAdmin");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.Challenge", b =>
                {
                    b.HasOne("Accesa.SportsBuddy.Database.Models.User", "Author")
                        .WithMany("Challenges")
                        .HasForeignKey("AuthorId")
                        .HasConstraintName("FK__Challenge__Autho__5070F446")
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.Event", b =>
                {
                    b.HasOne("Accesa.SportsBuddy.Database.Models.Address", "Address")
                        .WithMany("Events")
                        .HasForeignKey("AddressId")
                        .HasConstraintName("FK__Event__AddressID__571DF1D5")
                        .IsRequired();

                    b.HasOne("Accesa.SportsBuddy.Database.Models.User", "Author")
                        .WithMany("Events")
                        .HasForeignKey("AuthorId")
                        .HasConstraintName("FK__Event__AuthorId__5812160E")
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.EventCreatedBySportCenter", b =>
                {
                    b.HasOne("Accesa.SportsBuddy.Database.Models.Address", "Address")
                        .WithMany("EventCreatedBySportCenters")
                        .HasForeignKey("AddressId")
                        .HasConstraintName("FK__EventCrea__Addre__5AEE82B9")
                        .IsRequired();

                    b.HasOne("Accesa.SportsBuddy.Database.Models.SportCenterAdmin", "Author")
                        .WithMany("EventCreatedBySportCenters")
                        .HasForeignKey("AuthorId")
                        .HasConstraintName("FK__EventCrea__Autho__5BE2A6F2")
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.Favorite", b =>
                {
                    b.HasOne("Accesa.SportsBuddy.Database.Models.User", "Trainee")
                        .WithMany("Favorites")
                        .HasForeignKey("TraineeId")
                        .HasConstraintName("FK_Favorite_Trainee")
                        .IsRequired();

                    b.HasOne("Accesa.SportsBuddy.Database.Models.TrainingProgram", "Training")
                        .WithMany("Favorites")
                        .HasForeignKey("TrainingId")
                        .HasConstraintName("FK_Favorite_TrainingProgram")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trainee");

                    b.Navigation("Training");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.Review", b =>
                {
                    b.HasOne("Accesa.SportsBuddy.Database.Models.User", "Trainee")
                        .WithMany("Reviews")
                        .HasForeignKey("TraineeId")
                        .HasConstraintName("FK_Review_Review")
                        .IsRequired();

                    b.HasOne("Accesa.SportsBuddy.Database.Models.TrainingProgram", "Training")
                        .WithMany("Reviews")
                        .HasForeignKey("TrainingId")
                        .HasConstraintName("FK_Review_TrainingProgram")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trainee");

                    b.Navigation("Training");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.SportCenter", b =>
                {
                    b.HasOne("Accesa.SportsBuddy.Database.Models.Address", "AddressNavigation")
                        .WithMany("SportCenters")
                        .HasForeignKey("Address")
                        .HasConstraintName("FK_SportCenter_Addresses")
                        .IsRequired();

                    b.Navigation("AddressNavigation");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.SportCenterAdmin", b =>
                {
                    b.HasOne("Accesa.SportsBuddy.Database.Models.Role", "Role")
                        .WithMany("SportCenterAdmins")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_SportCenterAdmin_Roles")
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.TraineeChallenge", b =>
                {
                    b.HasOne("Accesa.SportsBuddy.Database.Models.Challenge", "Challenge")
                        .WithMany("TraineeChallenges")
                        .HasForeignKey("ChallengeId")
                        .HasConstraintName("FK__TraineeCh__Chall__534D60F1")
                        .IsRequired();

                    b.HasOne("Accesa.SportsBuddy.Database.Models.User", "Trainee")
                        .WithMany("TraineeChallenges")
                        .HasForeignKey("TraineeId")
                        .HasConstraintName("FK__TraineeCh__Train__5441852A")
                        .IsRequired();

                    b.Navigation("Challenge");

                    b.Navigation("Trainee");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.TraineeTrainingProgram", b =>
                {
                    b.HasOne("Accesa.SportsBuddy.Database.Models.User", "Trainee")
                        .WithMany("TraineeTrainingPrograms")
                        .HasForeignKey("TraineeId")
                        .HasConstraintName("FK_TraineeTrainingProgram_Trainee")
                        .IsRequired();

                    b.HasOne("Accesa.SportsBuddy.Database.Models.TrainingProgram", "TrainingProgram")
                        .WithMany("TraineeTrainingPrograms")
                        .HasForeignKey("TrainingProgramId")
                        .HasConstraintName("FK_TraineeTrainingProgram_TrainingProgram")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trainee");

                    b.Navigation("TrainingProgram");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.Trainer", b =>
                {
                    b.HasOne("Accesa.SportsBuddy.Database.Models.User", "User")
                        .WithMany("Trainers")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Trainers_User")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.TrainerSportCenter", b =>
                {
                    b.HasOne("Accesa.SportsBuddy.Database.Models.SportCenter", "SportCenter")
                        .WithMany("TrainerSportCenters")
                        .HasForeignKey("SportCenterId")
                        .HasConstraintName("FK_TrainerSportCenter_SportCenter")
                        .IsRequired();

                    b.HasOne("Accesa.SportsBuddy.Database.Models.Trainer", "Trainer")
                        .WithMany("TrainerSportCenters")
                        .HasForeignKey("TrainerId")
                        .HasConstraintName("FK_TrainerSportCenter_Trainers")
                        .IsRequired();

                    b.Navigation("SportCenter");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.TrainerTrainingProgram", b =>
                {
                    b.HasOne("Accesa.SportsBuddy.Database.Models.Trainer", "Trainer")
                        .WithMany("TrainerTrainingPrograms")
                        .HasForeignKey("TrainerId")
                        .HasConstraintName("FK_TrainerTrainingProgram_Trainers")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Accesa.SportsBuddy.Database.Models.TrainingProgram", "TrainingProgram")
                        .WithMany("TrainerTrainingPrograms")
                        .HasForeignKey("TrainingProgramId")
                        .HasConstraintName("FK_TrainerTrainingProgram_TrainingProgram")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trainer");

                    b.Navigation("TrainingProgram");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.TrainingProgram", b =>
                {
                    b.HasOne("Accesa.SportsBuddy.Database.Models.SportCenter", "SportCenter")
                        .WithMany("TrainingPrograms")
                        .HasForeignKey("SportCenterId")
                        .HasConstraintName("FK_TrainingProgram_SportCenter");

                    b.Navigation("SportCenter");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.User", b =>
                {
                    b.HasOne("Accesa.SportsBuddy.Database.Models.Address", "AddressNavigation")
                        .WithMany("Users")
                        .HasForeignKey("Address")
                        .HasConstraintName("FK_Trainee_Addresses")
                        .IsRequired();

                    b.HasOne("Accesa.SportsBuddy.Database.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_Trainee_Roles_RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AddressNavigation");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.Address", b =>
                {
                    b.Navigation("EventCreatedBySportCenters");

                    b.Navigation("Events");

                    b.Navigation("SportCenters");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.Challenge", b =>
                {
                    b.Navigation("TraineeChallenges");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.Role", b =>
                {
                    b.Navigation("SportCenterAdmins");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.SportCenter", b =>
                {
                    b.Navigation("AdministratedSportCenters");

                    b.Navigation("TrainerSportCenters");

                    b.Navigation("TrainingPrograms");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.SportCenterAdmin", b =>
                {
                    b.Navigation("AdministratedSportCenters");

                    b.Navigation("EventCreatedBySportCenters");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.Trainer", b =>
                {
                    b.Navigation("TrainerSportCenters");

                    b.Navigation("TrainerTrainingPrograms");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.TrainingProgram", b =>
                {
                    b.Navigation("Favorites");

                    b.Navigation("Reviews");

                    b.Navigation("TraineeTrainingPrograms");

                    b.Navigation("TrainerTrainingPrograms");
                });

            modelBuilder.Entity("Accesa.SportsBuddy.Database.Models.User", b =>
                {
                    b.Navigation("Challenges");

                    b.Navigation("Events");

                    b.Navigation("Favorites");

                    b.Navigation("Reviews");

                    b.Navigation("TraineeChallenges");

                    b.Navigation("TraineeTrainingPrograms");

                    b.Navigation("Trainers");
                });
#pragma warning restore 612, 618
        }
    }
}
